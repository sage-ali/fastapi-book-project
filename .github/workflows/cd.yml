name: CD Pipeline

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Docker Registry
        run: echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and push Docker image and Deploy to Azure Container Instance
        run: |
          IMAGE_TAG=${{ secrets.ACR_LOGIN_SERVER }}/myapp:$(date +%Y%m%d%H%M%S)
          docker build --cache-from=type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/myapp:latest \
                       --cache-to=type=registry,mode=max,ref=${{ secrets.ACR_LOGIN_SERVER }}/myapp:cache \
                       -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/myapp:cache
          az container create \
          --resource-group MyResourceGroup \
          --name fastapi-app-book-project \
          --image $IMAGE_TAG \
          --cpu 1 \
          --memory 1 \
          --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --dns-name-label fastapi-app-book-project \
          --ports 80 \
          --os-type Linux

      - name: Verify Deployment
        run: |
          echo "Waiting for the container to be deployed..."
          for i in {1..10}; do
              if curl -f http://fastapi-app-book-project.eastus.azurecontainer.io/api/v1/books; then
                echo "Deployment successful!"
                exit 0
              fi
              sleep 5
          done
          echo "Deployment failed!"
          exit 1
